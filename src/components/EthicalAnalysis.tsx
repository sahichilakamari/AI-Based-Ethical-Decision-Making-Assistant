import React from 'react';
import { Scale, Heart, Shield, Compass, BarChart3 } from 'lucide-react';
import { DilemmaData, EthicalFramework } from '../types/DilemmaTypes';

interface EthicalAnalysisProps {
  dilemma: DilemmaData;
}

const EthicalAnalysis: React.FC<EthicalAnalysisProps> = ({ dilemma }) => {
  // Generate analysis based on the dilemma data
  const frameworks: EthicalFramework[] = [
    {
      name: 'Utilitarian Ethics',
      description: 'Focuses on maximizing overall well-being and happiness for the greatest number of people.',
      analysis: `Analyzing "${dilemma.title}" through a utilitarian lens reveals several key considerations. The decision should prioritize outcomes that create the most benefit for all stakeholders involved: ${dilemma.stakeholders.join(', ')}. This framework emphasizes measuring the total happiness or well-being generated by each possible course of action.`,
      recommendation: 'Choose the option that demonstrably produces the greatest net positive outcome for all affected parties, even if it requires short-term sacrifices.',
      score: 8.2
    },
    {
      name: 'Deontological Ethics',
      description: 'Emphasizes moral duties, rules, and rights regardless of consequences.',
      analysis: `From a deontological perspective, the moral worth of actions in "${dilemma.title}" depends on adherence to moral rules and duties. This framework prioritizes the inherent rightness or wrongness of actions, considering the values you\'ve identified: ${dilemma.values.join(', ')}. The focus is on universal moral principles.`,
      recommendation: 'Act according to moral duties and principles that could be universally applied, respecting the dignity and rights of all individuals involved.',
      score: 7.8
    },
    {
      name: 'Virtue Ethics',
      description: 'Focuses on moral character and what a virtuous person would do.',
      analysis: `Virtue ethics asks what character traits and virtues should guide decision-making in "${dilemma.title}". This approach considers virtues like honesty, courage, compassion, justice, and integrity. The analysis examines how different choices reflect on your moral character and contribute to human flourishing.`,
      recommendation: 'Choose the path that exemplifies virtuous character traits and promotes moral excellence, considering both personal integrity and community well-being.',
      score: 8.5
    },
    {
      name: 'Care Ethics',
      description: 'Emphasizes relationships, empathy, and contextual moral reasoning.',
      analysis: `Care ethics evaluates "${dilemma.title}" through the lens of relationships and emotional connections. This framework prioritizes maintaining and nurturing relationships while being sensitive to the specific context and needs of those involved. It emphasizes empathy and understanding of different perspectives.`,
      recommendation: 'Prioritize solutions that preserve and strengthen relationships while showing genuine care and concern for all parties\' emotional and relational well-being.',
      score: 7.5
    }
  ];

  const getScoreColor = (score: number) => {
    if (score >= 8) return 'text-green-600 bg-green-50';
    if (score >= 7) return 'text-yellow-600 bg-yellow-50';
    return 'text-red-600 bg-red-50';
  };

  const getScoreWidth = (score: number) => `${(score / 10) * 100}%`;

  const frameworkIcons = [Scale, BarChart3, Heart, Compass];

  return (
    <div className="max-w-6xl mx-auto">
      <div className="mb-8 text-center">
        <Scale className="w-12 h-12 text-primary-600 mx-auto mb-4" />
        <h2 className="text-3xl font-bold text-gray-900 mb-2">Ethical Framework Analysis</h2>
        <p className="text-gray-600 max-w-3xl mx-auto">
          Your dilemma analyzed through multiple ethical perspectives to provide comprehensive moral guidance.
        </p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {frameworks.map((framework, index) => {
          const Icon = frameworkIcons[index];
          
          return (
            <div key={framework.name} className="bg-white rounded-2xl shadow-lg p-6 hover:shadow-xl transition-shadow duration-300">
              <div className="flex items-start space-x-4 mb-4">
                <div className="flex items-center justify-center w-12 h-12 bg-gradient-to-br from-primary-500 to-secondary-500 rounded-xl shadow-lg">
                  <Icon className="w-6 h-6 text-white" />
                </div>
                <div className="flex-1">
                  <h3 className="text-xl font-bold text-gray-900 mb-1">{framework.name}</h3>
                  <p className="text-sm text-gray-600">{framework.description}</p>
                </div>
                <div className={`px-3 py-1 rounded-full text-sm font-semibold ${getScoreColor(framework.score)}`}>
                  {framework.score}/10
                </div>
              </div>

              {/* Score Bar */}
              <div className="mb-4">
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div 
                    className="bg-gradient-to-r from-primary-500 to-secondary-500 h-2 rounded-full transition-all duration-500"
                    style={{ width: getScoreWidth(framework.score) }}
                  ></div>
                </div>
              </div>

              <div className="space-y-4">
                <div>
                  <h4 className="font-semibold text-gray-900 mb-2">Analysis</h4>
                  <p className="text-gray-700 text-sm leading-relaxed">{framework.analysis}</p>
                </div>

                <div>
                  <h4 className="font-semibold text-gray-900 mb-2">Recommendation</h4>
                  <div className="bg-blue-50 border-l-4 border-primary-500 p-3 rounded-r-lg">
                    <p className="text-primary-800 text-sm font-medium">{framework.recommendation}</p>
                  </div>
                </div>
              </div>
            </div>
          );
        })}
      </div>

      {/* Summary Section */}
      <div className="mt-8 bg-gradient-to-r from-primary-50 to-secondary-50 rounded-2xl p-6 border border-primary-100">
        <h3 className="text-xl font-bold text-gray-900 mb-4 flex items-center">
          <Compass className="w-5 h-5 mr-2 text-primary-600" />
          Ethical Framework Summary
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <h4 className="font-semibold text-gray-900 mb-2">Highest Compatibility</h4>
            <p className="text-sm text-gray-700">
              <span className="font-medium text-secondary-700">
                {frameworks.reduce((prev, current) => (prev.score > current.score) ? prev : current).name}
              </span>
              {' '}appears most applicable to your situation, suggesting a focus on character-based decision making.
            </p>
          </div>
          <div>
            <h4 className="font-semibold text-gray-900 mb-2">Key Considerations</h4>
            <p className="text-sm text-gray-700">
              Balance outcomes with principles, maintain relationships while upholding moral duties, and consider both immediate and long-term consequences.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default EthicalAnalysis;